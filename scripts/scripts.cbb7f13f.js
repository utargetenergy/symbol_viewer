"use strict";angular.module("symbolViewerAppApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch"]).config(["$routeProvider","$locationProvider",function(a,b){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/tx",{templateUrl:"views/view.html",controller:"ViewCtrl",controllerAs:"view"}).when("/rx",{templateUrl:"views/view.html",controller:"ViewCtrl",controllerAs:"view"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).otherwise({redirectTo:"/"}),b.html5Mode(!0)}]),angular.module("symbolViewerAppApp").controller("MainCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("symbolViewerAppApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("symbolViewerAppApp").controller("ViewCtrl",["$scope","fileReader",function(a,b){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"],a.parseCSV=function(a,b){var c=/\r\n|\r|\n/g,d=a.split(c);for(var e in d){for(var f,g=d[e].split(b=b||","),h=g.length-1;h>=0;h--)'"'==g[h].replace(/"\s+$/,'"').charAt(g[h].length-1)?(f=g[h].replace(/^\s+"/,'"')).length>1&&'"'==f.charAt(0)?g[h]=g[h].replace(/^\s*"|"\s*$/g,"").replace(/""/g,'"'):h?g.splice(h-1,2,[g[h-1],g[h]].join(b)):g=g.shift().split(b).concat(g):g[h].replace(/""/g,'"');d[e]=g}return d},console.log(b),a.getFile=function(){a.progress=0,a.textSrc="",a.totalSymbols=0,a.totalLHs=0,b.readAsText(a.file,a).then(function(b){a.textSrc=b,a.lines=a.parseCSV(b,","),a.lines.forEach(function(b){var c=/LH/;c.test(b)&&(a.totalSymbols+=b.length-4,a.totalLHs++)}),console.log(typeof b),console.log(typeof a.textSrc)})},a.$on("fileProgress",function(b,c){a.progress=c.loaded/c.total})}]).directive("ngFileSelect",function(){return{link:function(a,b){b.bind("change",function(b){a.file=(b.srcElement||b.target).files[0],a.getFile()})}}}).factory("fileReader",["$q","$log",function(a,b){var c=function(a,b,c){return function(){c.$apply(function(){b.resolve(a.result)})}},d=function(a,b,c){return function(){c.$apply(function(){b.reject(a.result)})}},e=function(a,b){return function(a){b.$broadcast("fileProgress",{total:a.total,loaded:a.loaded})}},f=function(a,b){var f=new FileReader;return f.onload=c(f,a,b),f.onerror=d(f,a,b),f.onprogress=e(f,b),f},g=function(b,c){var d=a.defer(),e=f(d,c);return e.readAsText(b),d.promise};return{readAsText:g}}]),angular.module("symbolViewerAppApp").run(["$templateCache",function(a){a.put("views/about.html","<p>This is the about view.</p>"),a.put("views/main.html",'<div class="jumbotron jumbotron-fluid"> <div class="container"> <div class="block"> <h1 class="animated fadeInUp">Hello</h1> <p class="animated fadeInUp">World!</p> </div> </div> </div>'),a.put("views/view.html",'<div> <form> <input type="file" ng-file-select="onFileSelect($files)"> </form> <br> <b>Statistics:</b><br> <pre>total Symbols: {{totalSymbols}}</pre> <pre>total LHs:   {{totalLHs}}</pre> <b>Preview:</b><br> <i ng-hide="textSrc">No text file choosed</i> <pre>{{textSrc}}</pre> <ul> <li ng-repeat="i in textSrc.children">{{i.Name}} - {{i.Id}}</li> </ul> <b>Progress:</b> <progress value="{{progress}}"></progress> </div>')}]);