"use strict";angular.module("symbolViewerAppApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch"]).config(["$routeProvider","$locationProvider",function(e,t){e.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/tx",{templateUrl:"views/view.html",controller:"ViewCtrl",controllerAs:"view"}).when("/rx",{templateUrl:"views/view.html",controller:"ViewCtrl",controllerAs:"view"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).otherwise({redirectTo:"/"}),t.html5Mode(!0)}]),angular.module("symbolViewerAppApp").controller("MainCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("symbolViewerAppApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("symbolViewerAppApp").controller("ViewCtrl",["$scope","fileReader",function(r,e){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"],r.parseCSV=function(e,t){var r=e.split(/\r\n|\r|\n/g);for(var l in r){for(var o,n=r[l].split(t=t||","),i=n.length-1;0<=i;i--)'"'==n[i].replace(/"\s+$/,'"').charAt(n[i].length-1)?1<(o=n[i].replace(/^\s+"/,'"')).length&&'"'==o.charAt(0)?n[i]=n[i].replace(/^\s*"|"\s*$/g,"").replace(/""/g,'"'):i?n.splice(i-1,2,[n[i-1],n[i]].join(t)):n=n.shift().split(t).concat(n):n[i].replace(/""/g,'"');r[l]=n}return r},console.log(e),r.getFile=function(){r.progress=0,r.textSrc="",r.totalSymbols=0,r.totalLHs=0,e.readAsText(r.file,r).then(function(e){r.textSrc=e,r.lines=r.parseCSV(e,","),r.lines.forEach(function(e){/LH/.test(e)&&(r.totalSymbols+=e.length-4,r.totalLHs++)}),console.log(typeof e),console.log(typeof r.textSrc)})},r.$on("fileProgress",function(e,t){r.progress=t.loaded/t.total})}]).directive("ngFileSelect",function(){return{link:function(t,e){e.bind("change",function(e){t.file=(e.srcElement||e.target).files[0],t.getFile()})}}}).factory("fileReader",["$q","$log",function(l,e){e.log("fileReader");return{readAsText:function(e,t){var r=l.defer();return function(e,t){var r=new FileReader;return r.onload=function(e,t,r){return function(){r.$apply(function(){t.resolve(e.result)})}}(r,e,t),r.onerror=function(e,t,r){return function(){r.$apply(function(){t.reject(e.result)})}}(r,e,t),r.onprogress=function(e,t){return function(e){t.$broadcast("fileProgress",{total:e.total,loaded:e.loaded})}}(0,t),r}(r,t).readAsText(e),r.promise}}}]),angular.module("symbolViewerAppApp").run(["$templateCache",function(e){e.put("views/about.html","<p>This is the about view.</p> "),e.put("views/main.html",'<div class="jumbotron jumbotron-fluid"> <div class="container"> <div class="block"> <h1 class="animated fadeInUp">Hello</h1> <p class="animated fadeInUp">World!</p> </div> </div> </div> '),e.put("views/view.html",'<div> <form> <input type="file" ng-file-select="onFileSelect($files)"> </form> <br> <b>Statistics:</b><br> <pre>total Symbols: {{totalSymbols}}</pre> <pre>total LHs:   {{totalLHs}}</pre> <b>Preview:</b><br> <i ng-hide="textSrc">No text file choosed</i> <pre>{{textSrc}}</pre> <ul> <li ng-repeat="i in textSrc.children">{{i.Name}} - {{i.Id}}</li> </ul> <b>Progress:</b> <progress value="{{progress}}"></progress> </div> ')}]);