"use strict";angular.module("symbolViewerAppApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch"]).config(["$routeProvider","$locationProvider",function(t,e){t.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/symbol_viewer/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/symbol_viewer/tx",{templateUrl:"views/tx.html",controller:"TxCtrl",controllerAs:"tx"}).when("/tx",{templateUrl:"views/tx.html",controller:"TxCtrl",controllerAs:"tx"}).when("/symbol_viewer/rx",{templateUrl:"views/rx.html",controller:"RxCtrl",controllerAs:"rx"}).when("/rx",{templateUrl:"views/rx.html",controller:"RxCtrl",controllerAs:"rx"}).otherwise({redirectTo:"/"}),e.html5Mode(!0)}]),angular.module("symbolViewerAppApp").controller("MainCtrl",["$scope","$location",function(t,e){t.txTotalSymbols=localStorage.getItem("totalSymbols"),t.txTotalLHs=localStorage.getItem("totalLHs"),t.rxTotalSymbols=localStorage.getItem("rxTotalSymbols"),t.rxTotalLHs=localStorage.getItem("rxTotalLHs"),t.isActive=function(t){return t===e.path()}}]),angular.module("symbolViewerAppApp").controller("RxCtrl",["$scope",function(t){t.rxTotalSymbols=60,t.rxTotalLHs=1,localStorage.setItem("rxTotalSymbols",t.rxTotalSymbols),localStorage.setItem("rxTotalLHs",t.rxTotalLHs)}]),angular.module("symbolViewerAppApp").controller("TxCtrl",["$scope","fileReader",function(l,t){l.visible=!1,l.toggle=function(){l.visible=!l.visible},this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"],l.parseCSV=function(t,e){var l=t.split(/\r\n|\r|\n/g);for(var o in l){for(var r,s=l[o].split(e=e||","),a=s.length-1;0<=a;a--)'"'==s[a].replace(/"\s+$/,'"').charAt(s[a].length-1)?1<(r=s[a].replace(/^\s+"/,'"')).length&&'"'==r.charAt(0)?s[a]=s[a].replace(/^\s*"|"\s*$/g,"").replace(/""/g,'"'):a?s.splice(a-1,2,[s[a-1],s[a]].join(e)):s=s.shift().split(e).concat(s):s[a].replace(/""/g,'"');l[o]=s}return l},console.log(t),l.getFile=function(){l.progress=0,l.textSrc="",l.totalSymbols=0,l.totalLHs=0,localStorage.setItem("totalSymbols",l.totalSymbols),localStorage.setItem("totalLHs",l.totalLHs),t.readAsText(l.file,l).then(function(t){l.textSrc=t,l.lines=l.parseCSV(t,","),l.lines.forEach(function(t){/LH/.test(t)&&(l.totalSymbols+=t.length-4,l.totalLHs++)}),localStorage.setItem("totalSymbols",l.totalSymbols),localStorage.setItem("totalLHs",l.totalLHs),console.log(typeof t),console.log(typeof l.textSrc)})},l.$on("fileProgress",function(t,e){l.progress=e.loaded/e.total})}]).directive("ngFileSelect",function(){return{link:function(e,t){t.bind("change",function(t){e.file=(t.srcElement||t.target).files[0],e.getFile()})}}}).factory("fileReader",["$q","$log",function(o,t){t.log("fileReader");return{readAsText:function(t,e){var l=o.defer();return function(t,e){var l=new FileReader;return l.onload=function(t,e,l){return function(){l.$apply(function(){e.resolve(t.result)})}}(l,t,e),l.onerror=function(t,e,l){return function(){l.$apply(function(){e.reject(t.result)})}}(l,t,e),l.onprogress=function(t,e){return function(t){e.$broadcast("fileProgress",{total:t.total,loaded:t.loaded})}}(0,e),l}(l,e).readAsText(t),l.promise}}}]),angular.module("symbolViewerAppApp").run(["$templateCache",function(t){t.put("views/main.html",'<div class="jumbotron jumbotron-fluid"> <div class="container"> <div class="block"> <h1 class="animated fadeInUp">Hello</h1> <p class="animated fadeInUp">World!</p> </div> </div> </div> <div class="container"> <p> <strong> Summary </strong> </p> <table class="table table-striped"> <tr> <th> </th> <th> Tx</th> <th> Rx</th> <th> Percentage</th> </tr> <tr> <td> symbols </td> <td>{{txTotalSymbols}} </td> <td>{{rxTotalSymbols}} </td> <td>{{rxTotalSymbols /txTotalSymbols * 100 | number : 2}} </td> </tr> <tr><td> sequences </td> <td> {{txTotalLHs}} </td> <td> {{rxTotalLHs}} </td> <td> {{rxTotalLHs/txTotalLHs * 100 | number : 2}} </td> </tr> </table> </div> '),t.put("views/rx.html","<p>This is the Rx view.</p> "),t.put("views/tx.html",'<div class="container"> <form> <input type="file" ng-file-select="onFileSelect($files)"> </form> <br> <b>Statistics:</b><br> <table class="table table-striped"> <tr> <th>Name</th> <th>Counts </th> </tr> <tr> <td>Total Symbols </td> <td>{{totalSymbols}}</td> </tr> <tr> <td>Total Sequences </td> <td>{{totalLHs}}</td> </tr> </table> <b>Preview:</b> <input type="checkbox" ng-model="visible" value="false" ng-click="toggle()"> <br> <i ng-hide="textSrc">No text file choosed</i> <pre ng-show="visible">{{textSrc}}</pre> <br> <b>Progress:</b> <progress value="{{progress}}"></progress> </div> ')}]);